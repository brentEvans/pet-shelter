{"version":3,"sources":["components/Dashboard.js","components/PetForm.js","components/PetDetails.js","components/EditPet.js","App.js","serviceWorker.js","index.js"],"names":["Dashboard","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","componentDidMount","axios","get","then","res","setState","pets","data","catch","err","console","log","state","react_default","a","createElement","className","map","pet","key","_id","name","type","react_router_dom","to","Component","PetForm","changeName","e","objectSpread","target","value","changeType","changeDescription","description","changeSkill1","skill1","changeSkill2","skill2","changeSkill3","skill3","create","preventDefault","post","errors","history","push","onSubmit","onChange","message","min","PetDetails","concat","match","params","like","liked","likeCount","likes","put","adopt","delete","onClick","EditPet","edit","App","react_router","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3bcabb3f.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\nimport { Link} from 'react-router-dom';\n\nclass Dashboard extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            pets: []\n        }\n    }\n    componentDidMount = () => {\n        axios.get(\"/pets\")\n            .then(res => {\n                // console.log(res.data.pets);\n                this.setState({pets: res.data.pets});\n            }).catch(err => {\n                console.log(err);\n            })\n    }\n\n\n\n\n    render(){\n        return (\n            <div>\n                <h3 className=\"text-center\">These pets are looking for a home!</h3>\n                    <table className=\"ui celled table text-center\">\n                        <thead>\n                            <tr>\n                                <th className=\"\">Name</th>\n                                <th>Type</th>\n                                <th>Actions</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {\n                                this.state.pets.map( pet => \n                                    <tr key={pet._id}>\n                                        <td>{pet.name}</td>\n                                        <td>{pet.type}</td>\n                                        <td>\n                                            <Link\n                                                to={'/pets/' + pet._id +'/show'}>\n                                                <button className=\"ui button teal\">Details</button>\n                                            </Link>\n                                            <Link\n                                                to={'/pets/' + pet._id + '/edit'}>\n                                                <button className=\"ui button violet\">Edit</button>\n                                            </Link>\n                                        </td>\n                                    </tr>\n                                )\n                            }\n                        </tbody>\n                    </table>\n                <div className=\"jumbotron text-center\">\n                    <h1>Know of a pet in search of a loving home?</h1>\n                    <h1 className=\"display-4\"><Link to=\"/pets/new\">Add a pet to the shelter!</Link></h1>\n                </div>\n                </div>\n        )\n    }\n}\n\nexport default Dashboard;\n\n\n","import React, { Component } from 'react';\nimport axios from 'axios';\nimport { Link} from 'react-router-dom';\n\nclass PetForm extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            pet: {\n                name: \"\",\n                type: \"\",\n                description: \"\",\n                skill1: \"\",\n                skill2: \"\",\n                skill3: \"\"\n            },\n            errors: {}\n        }\n    }\n\n    changeName = (e) => {\n        this.setState({pet: {...this.state.pet, name: e.target.value}})\n    }\n\n    changeType = (e) => {\n        this.setState({pet: {...this.state.pet, type: e.target.value}})\n    }\n\n    changeDescription = (e) => {\n        this.setState({pet: {...this.state.pet, description: e.target.value}})\n    }\n\n    changeSkill1 = (e) => {\n        this.setState({pet: {...this.state.pet, skill1: e.target.value}});\n        console.log(this.state.pet)\n    }\n\n    changeSkill2 = (e) => {\n        // this.setState({pet: {...this.state.pet, skills: {...this.state.pet.skills, skill2: e.target.value}}})\n        this.setState({pet: {...this.state.pet, skill2: e.target.value}});\n    }\n\n    changeSkill3 = (e) => {\n        // this.setState({pet: {...this.state.pet, skills: {...this.state.pet.skills, skill3: e.target.value}}})\n        this.setState({pet: {...this.state.pet, skill3: e.target.value}});\n    }\n\n    create = (e) => {\n        e.preventDefault();\n        console.log(this.state.pet);\n        axios.post(\"/pets\", this.state.pet)\n            .then(res => {\n                console.log(res);\n\n                if(res.data.errors){\n                    // console.log(res.data.errors.errors)\n                    this.setState({errors: res.data.errors.errors});\n                } else{\n                    this.props.history.push('/');\n                }\n            }).catch(err => {\n                console.log(err);\n            })\n    }\n\n\n\n    render(){\n        return (\n            <fieldset>\n                <legend>Add Pet</legend>\n                <form onSubmit={this.create} className=\"\">\n                    <p>\n                        Pet name:&nbsp;\n                        <input type=\"text\" onChange={this.changeName} />\n                        {\n                            (this.state.errors.name) ? \n                            <span className=\"error\">{this.state.errors.name.message}</span> : \n                            <span></span>\n                        }\n                    </p>\n                    <p>\n                        Pet type:&nbsp;\n                        <input type=\"text\" onChange={this.changeType} min=\"1\" />\n                        {\n                            (this.state.errors.type) ? \n                            <span className=\"error\">{this.state.errors.type.message}</span> : \n                            <span></span>\n                        }\n                    </p>\n                    <p>\n                        Description:&nbsp;\n                        <input type=\"text\" onChange={this.changeDescription} min=\"1\" />\n                        {\n                            (this.state.errors.description) ? \n                            <span className=\"error\">{this.state.errors.description.message}</span> : \n                            <span></span>\n                        }\n                    </p>\n                    <div>\n                        <span>Skills:&nbsp;</span>\n                        <div className=\"skillsForm\">\n                            <p>\n                                Skill 1:&nbsp;\n                                <input type=\"text\" onChange={this.changeSkill1}></input>\n                            </p>\n                            <p>\n                                Skill 2:&nbsp;\n                                <input type=\"text\" onChange={this.changeSkill2}></input>\n                            </p>\n                            <p>\n                                Skill 3:&nbsp;\n                                <input type=\"text\" onChange={this.changeSkill3}></input>\n                            </p>\n                        </div>\n                    </div>\n                    <button type=\"submit\" className=\"ui teal button\">Add Pet</button>\n                    <Link to=\"/\"><button className=\"ui violet button\">Cancel</button></Link>\n                </form>\n            </fieldset>\n        )\n    }\n}\n\nexport default PetForm;\n\n\n\n\n\n\n// class PetForm extends Component {\n//     constructor(props){\n//         super(props);\n//         this.state = {\n//             pet: {\n//                 name: \"\",\n//                 type: \"\",\n//                 description: \"\",\n//                 skills: [\n//                     {skill1: \"\"},\n//                     {skill2: \"\"},\n//                     {skill3: \"\"},\n//                 ]\n//             },\n//             errors: {}\n//         }\n//     }","import React, { Component } from 'react';\nimport axios from 'axios';\nimport { Link} from 'react-router-dom';\n\n\nclass PetDetails extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            pet: {\n                _id: \"\",\n                name: \"\",\n                type: \"\",\n                description: \"\",\n                skill1: null,\n                skill2: null,\n                skill3: null,\n                likes: 0\n            },\n            liked: false\n        }\n    }\n\n    componentDidMount = () => {\n        axios.get(`/pet/${this.props.match.params._id}`)\n            .then(res => {\n                if(res.data.errors){\n                    this.setState({errors: res.data.errors.message});\n                } else{\n                    this.setState({pet: res.data.pet})\n                }\n            }).catch(err => {\n                console.log(err);\n            })\n    }\n\n    like = (e) => {\n        // console.log(this.state.pet.likes);\n        if(this.state.liked){\n            return;\n        } else{\n            let likeCount = this.state.pet.likes + 1;\n            this.setState({liked: true});\n            this.setState({pet: {...this.state.pet, likes: likeCount}}, () => {\n                console.log(this.state.pet.likes);\n                axios.put(`/pet/${this.state.pet._id}`, this.state.pet)\n                    .then(res => {\n                        if(res.data.errors){\n                            this.setState({errors: res.data.errors.errors});\n                        } else{\n                            // console.log(this.state.pet.likes);\n                            \n                        }\n                    }).catch(err => {\n                        console.log(err);\n                    })\n            });\n        }\n    }\n\n    adopt = (e) => {\n        console.log(this.state.pet._id);\n        axios.delete(`/pet/${this.state.pet._id}`)\n            .then(res => {\n                this.props.history.push('/');\n            }).catch(err => {\n                console.log(err);\n            })\n    }\n\n    render(){\n        return(\n            <div>\n                <Link to=\"/\" ><h5>Home</h5></Link>\n                <h3>Details about {this.state.pet.name}</h3> \n                <strong>Pet type:</strong>\n                <p className=\"ml-5\">{this.state.pet.type}</p>\n\n                <strong>Description:</strong>\n                <p className=\"ml-5\">{this.state.pet.description}</p>\n\n                <strong>Skills:</strong>\n                    <p className=\"ml-5\">{this.state.pet.skill1}</p>\n                    <p className=\"ml-5\">{this.state.pet.skill2}</p> \n                    <p className=\"ml-5\">{this.state.skill3}</p>\n                <strong>Likes:</strong>\n                <p className=\"ml-5\">{this.state.pet.likes}</p> \n\n                <button onClick={this.like} className=\"ui button teal\">Like this pet!</button>\n                {/* add button to delete (adopt this pet) */}\n                <button onClick={this.adopt} className=\"ui button purple\">Adopt this pet!</button>\n\n\n            </div>\n        )\n    }\n}\n\n\n\nexport default PetDetails;\n\n\n","import React, { Component } from 'react';\nimport axios from 'axios';\nimport { Link} from 'react-router-dom';\n\n\nclass EditPet extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            pet: {\n                _id: \"\",\n                name: \"\",\n                type: \"\",\n                description: \"\",\n                skill1: \"\",\n                skill2: \"\",\n                skill3: \"\"\n            },\n            errors: {}\n        }\n    }\n\n    componentDidMount = () => {\n        axios.get(`/pet/${this.props.match.params._id}`)\n            .then(res => {\n                this.setState({pet: res.data.pet});\n            }).catch(err => {\n                console.log(err);\n            })\n    }\n\n    changeName = (e) => {\n        this.setState({pet: {...this.state.pet, name: e.target.value}})\n    }\n\n    changeType = (e) => {\n        this.setState({pet: {...this.state.pet, type: e.target.value}})\n    }\n\n    changeDescription = (e) => {\n        this.setState({pet: {...this.state.pet, description: e.target.value}})\n    }\n\n    changeSkill1 = (e) => {\n        this.setState({pet: {...this.state.pet, skill1: e.target.value}});\n        console.log(this.state.pet)\n    }\n\n    changeSkill2 = (e) => {\n        // this.setState({pet: {...this.state.pet, skills: {...this.state.pet.skills, skill2: e.target.value}}})\n        this.setState({pet: {...this.state.pet, skill2: e.target.value}});\n    }\n\n    changeSkill3 = (e) => {\n        // this.setState({pet: {...this.state.pet, skills: {...this.state.pet.skills, skill3: e.target.value}}})\n        this.setState({pet: {...this.state.pet, skill3: e.target.value}});\n    }\n\n    edit = (e) => {\n        e.preventDefault();\n        axios.put(`/pet/${this.state.pet._id}`, this.state.pet)\n            .then(res => {\n                // console.log(res);\n                if(res.data.errors){\n                    // console.log(res.data.errors.errors)\n                    this.setState({errors: res.data.errors.errors});\n                } else{\n                    this.props.history.push(`/pets/${this.state.pet._id}/show`);\n                }\n            }).catch(err => {\n                console.log(err);\n            });\n    }\n\n    render(){\n        return(\n            <div>\n                <fieldset>\n                    <legend>Edit This Pet!</legend>\n                    <form onSubmit={this.edit}>\n                        <p>\n                            Pet name:&nbsp;\n                            <input type=\"text\" onChange={this.changeName} value={this.state.pet.name} />\n                            {\n                                (this.state.errors.name) ? \n                                <span className=\"error\">{this.state.errors.name.message}</span> : \n                                <span></span>\n                            }\n                        </p>\n                        <p>\n                            Pet type:&nbsp;\n                            <input type=\"text\" onChange={this.changeType} value={this.state.pet.type} />\n                            {\n                                (this.state.errors.type) ? \n                                <span className=\"error\">{this.state.errors.type.message}</span> : \n                                <span></span>\n                            }\n                        </p>\n                        <p>\n                            Description:&nbsp;\n                            <input type=\"text\" onChange={this.changeDescription} value={this.state.pet.description} />\n                            {\n                                (this.state.errors.description) ? \n                                <span className=\"error\">{this.state.errors.description.message}</span> : \n                                <span></span>\n                            }\n                        </p>\n                        <div>\n                            <span>Skills:&nbsp;</span>\n                            <div className=\"skillsForm\">\n                                <p>\n                                    Skill 1:&nbsp;\n                                    <input type=\"text\" onChange={this.changeSkill1} value={this.state.pet.skill1} />\n                                </p>\n                                <p>\n                                    Skill 2:&nbsp;\n                                    <input type=\"text\" onChange={this.changeSkill2} value={this.state.pet.skill2} />\n                                </p>\n                                <p>\n                                    Skill 3:&nbsp;\n                                    <input type=\"text\" onChange={this.changeSkill3} value={this.state.pet.skill3} />\n                                </p>\n                            </div>\n                        </div>\n                        <button type=\"submit\" className=\"ui button teal\">Edit Pet</button>\n                        <Link to=\"/\"><button className=\"ui button violet\">Cancel</button></Link>\n                    </form>\n                </fieldset>\n            </div>\n        )\n    }\n}\n\n\n\nexport default EditPet;","import React from 'react';\nimport './App.css';\nimport \"react-router\";\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport Dashboard from './components/Dashboard';\nimport PetForm from './components/PetForm';\nimport PetDetails from './components/PetDetails';\nimport EditPet from './components/EditPet';\n\nfunction App() {\n  return (\n    <div className=\"App container\">\n      <h1 className=\"mx-auto jumbotron text-center display-2\">Pet Shelter</h1>\n      <BrowserRouter>\n          <Route exact path=\"/\" component={Dashboard} />\n          <Route path=\"/pets/new\" component={PetForm} />\n          <Route exact path=\"/pets/:_id/show\" component={PetDetails} />\n          <Route path=\"/pets/:_id/edit\" component={EditPet} />\n        </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}